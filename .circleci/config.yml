version: 2.1

orbs:
  node: circleci/node@5

jobs:
  test-node:
    # Install node dependencies and run tests
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          command: npm install jest-junit
      - run:
          name: Run tests
          command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./test-results/
  
  build-node:
    # Build node project
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
  
  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Install deployment dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y sshpass
      - run:
          name: Prepare deployment directory
          command: |
            sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST '
            if [ -d /candid ]; then 
              rm -rf /candid; 
            fi
            mkdir -p /candid'
      - run:
          name: Copy artifacts to server
          command: |
            sshpass -p $SSH_PASSWORD scp -o StrictHostKeyChecking=no -r ~/artifacts/* $SSH_USER@$SSH_HOST:/candid
      - run:
          name: Deploy application
          command: sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST 'cd /candid && ./deploy.sh'

workflows:
  build-and-test:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
      - deploy:
          requires:
            - build-node
